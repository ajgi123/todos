{"version":3,"sources":["components/add-todo/AddTodo.tsx","components/error-dialog/ErrorDialog.tsx","hooks/usePropsRelatedState.ts","components/todo/Todo.tsx","hooks/useInterceptor.ts","hooks/useTodos.ts","pages/todo-list/TodoList.tsx"],"names":["validationSchema","yup","todo","required","min","max","AddTodo","addTodo","localId","isLoadingAdd","initialValue","formikRef","useRef","Container","component","maxWidth","innerRef","initialValues","onSubmit","values","todoTitle","id","title","done","current","resetForm","submitHandler","props","name","margin","placeholder","fullWidth","label","FormTextField","Button","type","variant","color","disabled","CircularProgress","ErrorDialog","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","handleClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","onClick","usePropsRelatedState","prop","dependacyArr","useState","state","setState","useEffect","useStyles","makeStyles","createStyles","root","flexGrow","spacing","width","paper","padding","desktop","display","up","mobile","Todo","isEditing","setIsEditing","setTitle","classes","anchorEl","setAnchorEl","editCancelHandler","prevState","removeHandler","removeTodo","isMenuOpen","Boolean","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","className","Paper","Grid","container","direction","justifyContent","alignItems","item","xs","event","preventDefault","updateTodo","Input","value","onChange","target","isLoadingUpdate","isMutating","Typography","gutterBottom","FormControlLabel","control","Checkbox","checked","isLoadingRemove","IconButton","edge","currentTarget","defaultRequest","config","defaultRequestError","error","Promise","reject","defaultResponse","response","defaultResponseError","useInterceptor","instance","requestFunc","requestErrorFunc","responseFunc","responseErrorFunc","requestInterceptor","interceptors","request","use","responseInterceptor","eject","todoApi","axios","create","baseURL","process","patch","deleteTodo","delete","counter","Date","getTime","put","useTodos","initialState","useAuth","userData","addTokenToHeader","refreshTokenOn401","mutatingTodoId","setMutatingTodoId","queryClient","useQueryClient","useQuery","get","then","res","data","Object","getTodos","initialData","isErrorGet","isError","isLoading","isFetching","configMutate","onSuccess","invalidateQueries","useMutation","isErrorAdd","isSuccessAdd","isSuccess","add","mutate","onMutate","object","isErrorUpdate","update","isErrorRemove","remove","absolute","position","zIndex","TodoList","isOpenError","setIsOpenError","logOutUser","todosJSX","FullPageSpinner","length","map","Box","paddingTop","flexDirection","localStorage","clear","size"],"mappings":"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","file":"static/js/5.b5f8d718.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Field, Form, Formik, FormikProps } from \"formik\";\r\nimport React, { useRef } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { UpdateAddArgsType } from \"../../hooks/useTodos\";\r\nimport { FormTextField } from \"../form-text-field/FormTextField\";\r\n\r\nconst validationSchema = yup.object({\r\n  todo: yup\r\n    .string()\r\n    .required(\"Name is required\")\r\n    .min(3, \"Todo must be at least 3 characters\")\r\n    .max(35, \"Todo must be not longer than 35 characters\"),\r\n});\r\n\r\ninterface AddTodoPropsType {\r\n  addTodo: ({ localId, todo }: UpdateAddArgsType) => void;\r\n  localId: string;\r\n  isLoadingAdd: boolean;\r\n  initialValue?: string;\r\n}\r\n\r\nconst AddTodo = ({\r\n  addTodo,\r\n  localId,\r\n  isLoadingAdd,\r\n  initialValue = \"\",\r\n}: AddTodoPropsType) => {\r\n  const formikRef = useRef<FormikProps<{ todo: string }> | null>(null);\r\n\r\n  function submitHandler(todoTitle: string) {\r\n    addTodo({\r\n      localId: localId,\r\n      todo: { id: 1, title: todoTitle, done: false },\r\n    });\r\n    formikRef.current?.resetForm();\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Formik\r\n        innerRef={formikRef}\r\n        initialValues={{\r\n          todo: initialValue,\r\n        }}\r\n        onSubmit={(values) => submitHandler(values.todo)}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(props: FormikProps<any>) => (\r\n          <Form>\r\n            <Field\r\n              name=\"todo\"\r\n              margin=\"normal\"\r\n              placeholder=\"Todo\"\r\n              required\r\n              fullWidth\r\n              id=\"Todo\"\r\n              label=\"Todo\"\r\n              component={FormTextField}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isLoadingAdd}\r\n            >\r\n              {isLoadingAdd ? <CircularProgress /> : \"Submit\"}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport React from \"react\";\r\n\r\ntype ErrorDialogPropsType = {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n};\r\n\r\nconst ErrorDialog = (props: ErrorDialogPropsType) => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"error-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"error-dialog-title\">Something went wrong</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>You will be log out.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={props.handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorDialog;\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\n\r\nconst usePropsRelatedState = <T>(\r\n  prop: T,\r\n  dependacyArr: any[]\r\n): [T, Dispatch<SetStateAction<T>>] => {\r\n  const [state, setState] = useState(prop);\r\n\r\n  useEffect(() => {\r\n    setState(prop);\r\n  }, [prop, ...dependacyArr]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default usePropsRelatedState;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport React, { ChangeEvent, SyntheticEvent, useState } from \"react\";\r\nimport usePropsRelatedState from \"../../hooks/usePropsRelatedState\";\r\nimport { UpdateAddArgsType } from \"../../hooks/useTodos\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(2),\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: \"auto\",\r\n      maxWidth: 1000,\r\n    },\r\n    desktop: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n    },\r\n    mobile: {\r\n      display: \"block\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype TodoPropsType = {\r\n  id: number;\r\n  title: string;\r\n  done: boolean;\r\n  localId: string;\r\n  removeTodo: ({ localId, id }: { localId: string; id: number }) => void;\r\n  isLoadingRemove: boolean;\r\n  updateTodo: ({ localId, todo }: UpdateAddArgsType) => void;\r\n  isLoadingUpdate: boolean;\r\n  isMutating: boolean;\r\n};\r\n\r\nconst Todo = (props: TodoPropsType) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [title, setTitle] = usePropsRelatedState(props.title, [isEditing]);\r\n  const [done] = usePropsRelatedState(props.done, []);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  function editCancelHandler() {\r\n    setIsEditing((prevState) => !prevState);\r\n  }\r\n\r\n  function handleChange(event: ChangeEvent<HTMLInputElement>) {\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function checkBoxHandler() {\r\n    props.updateTodo({\r\n      localId: props.localId,\r\n      todo: { id: props.id, title: props.title, done: !done },\r\n    });\r\n  }\r\n\r\n  function removeHandler() {\r\n    props.removeTodo({ localId: props.localId, id: props.id });\r\n  }\r\n\r\n  function submitHandler(event: SyntheticEvent) {\r\n    event.preventDefault();\r\n\r\n    setIsEditing(false);\r\n    props.updateTodo({\r\n      localId: props.localId,\r\n      todo: { id: props.id, title: title, done: props.done },\r\n    });\r\n  }\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const menuId = \"mobile-todo-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={editCancelHandler}>\r\n        {isEditing ? \"Cancel\" : \"Edit\"}\r\n      </MenuItem>\r\n      <MenuItem onClick={removeHandler}>Remove</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction=\"row\"\r\n          justifyContent=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            {isEditing ? (\r\n              <form onSubmit={submitHandler}>\r\n                <Input\r\n                  id=\"component-simple\"\r\n                  value={title}\r\n                  onChange={handleChange}\r\n                />\r\n                <Button type=\"submit\">Change</Button>\r\n              </form>\r\n            ) : props.isLoadingUpdate && props.isMutating ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                {props.title}\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            {props.isLoadingUpdate && props.isMutating ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={done}\r\n                    onChange={checkBoxHandler}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Done\"\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid item className={classes.mobile}>\r\n            {props.isLoadingRemove && props.isMutating ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            )}\r\n          </Grid>\r\n          <Grid item className={classes.desktop}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={editCancelHandler}\r\n            >\r\n              {isEditing ? \"Cancel\" : \"Edit\"}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item className={classes.desktop}>\r\n            {props.isLoadingRemove && props.isMutating ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <IconButton onClick={removeHandler}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import {\r\n  AxiosError,\r\n  AxiosInstance,\r\n  AxiosRequestConfig,\r\n  AxiosResponse,\r\n} from \"axios\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst defaultRequest = (config: AxiosRequestConfig) => {\r\n  return config;\r\n};\r\n\r\nconst defaultRequestError = (error: AxiosError) => {\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst defaultResponse = (response: AxiosResponse<any>) => {\r\n  return response;\r\n};\r\n\r\nconst defaultResponseError = (\r\n  error: AxiosError\r\n): void | undefined | Promise<any> => {\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst useInterceptor = (\r\n  instance: AxiosInstance,\r\n  {\r\n    requestFunc = defaultRequest,\r\n    requestErrorFunc = defaultRequestError,\r\n    responseFunc = defaultResponse,\r\n    responseErrorFunc = defaultResponseError,\r\n  }\r\n) => {\r\n  useEffect(() => {\r\n    const requestInterceptor = instance.interceptors.request.use(\r\n      requestFunc,\r\n      requestErrorFunc\r\n    );\r\n\r\n    const responseInterceptor = instance.interceptors.response.use(\r\n      responseFunc,\r\n      responseErrorFunc\r\n    );\r\n    return () => {\r\n      instance.interceptors.request.eject(requestInterceptor);\r\n      instance.interceptors.response.eject(responseInterceptor);\r\n    };\r\n  }, [requestErrorFunc, requestFunc, responseErrorFunc, responseFunc]);\r\n};\r\n\r\nexport default useInterceptor;\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { useAuth } from \"../context/AuthProvider\";\r\nimport useInterceptor from \"./useInterceptor\";\r\n\r\nexport interface TodoInterface {\r\n  id: number;\r\n  title: string;\r\n  done: boolean;\r\n}\r\n\r\nconst todoApi = axios.create({\r\n  baseURL: `${process.env.REACT_APP_FIREBASE_URL}`,\r\n});\r\n\r\nconst getTodos = (localId: string): Promise<TodoInterface[]> =>\r\n  todoApi\r\n    .get(`/users/${localId}/todo.json`)\r\n    .then((res) => res.data)\r\n    .then((data) => {\r\n      if (data) {\r\n        return Object.values(data);\r\n      }\r\n      return [];\r\n    });\r\n\r\nexport type UpdateAddArgsType = {\r\n  localId: string;\r\n  todo: TodoInterface;\r\n};\r\n\r\nconst updateTodo = ({ localId, todo }: UpdateAddArgsType) =>\r\n  todoApi.patch(`/users/${localId}/todo/${todo.id}.json`, todo);\r\n\r\nconst deleteTodo = ({ localId, id }: { localId: string; id: number }) =>\r\n  todoApi.delete(`/users/${localId}/todo/${id}.json`);\r\n\r\nconst date = new Date();\r\nlet counter = date.getTime();\r\n\r\nconst addTodo = ({ localId, todo }: UpdateAddArgsType) => {\r\n  const id = (counter += 1);\r\n  todo.id = id;\r\n  return todoApi.put(`/users/${localId}/todo/${id}.json`, todo);\r\n};\r\n\r\nconst initialId = -1;\r\n\r\nconst useTodos = (initialState: TodoInterface[]) => {\r\n  const { userData, addTokenToHeader, refreshTokenOn401 } = useAuth();\r\n  useInterceptor(todoApi, {\r\n    requestFunc: addTokenToHeader,\r\n    responseErrorFunc: refreshTokenOn401,\r\n  });\r\n  const [mutatingTodoId, setMutatingTodoId] = useState(initialId);\r\n  const localId = userData ? userData.localId : \"\";\r\n  const queryClient = useQueryClient();\r\n  const {\r\n    data,\r\n    isError: isErrorGet,\r\n    isLoading,\r\n    isFetching,\r\n  } = useQuery([\"todo\", localId], () => getTodos(localId), {\r\n    initialData: initialState,\r\n  });\r\n  const configMutate = {\r\n    onSuccess: () => {\r\n      setMutatingTodoId(-1);\r\n      queryClient.invalidateQueries();\r\n    },\r\n  };\r\n  const {\r\n    isLoading: isLoadingAdd,\r\n    isError: isErrorAdd,\r\n    isSuccess: isSuccessAdd,\r\n    mutate: add,\r\n  } = useMutation(addTodo, configMutate);\r\n  const {\r\n    isLoading: isLoadingUpdate,\r\n    isError: isErrorUpdate,\r\n    mutate: update,\r\n  } = useMutation(updateTodo, {\r\n    ...configMutate,\r\n    onMutate: (object) => {\r\n      setMutatingTodoId(object.todo.id);\r\n    },\r\n  });\r\n  const {\r\n    isLoading: isLoadingRemove,\r\n    isError: isErrorRemove,\r\n    mutate: remove,\r\n  } = useMutation(deleteTodo, {\r\n    ...configMutate,\r\n    onMutate: (object) => {\r\n      setMutatingTodoId(object.id);\r\n    },\r\n  });\r\n\r\n  const isError = isErrorAdd || isErrorGet || isErrorRemove || isErrorUpdate;\r\n\r\n  return {\r\n    data,\r\n    isError,\r\n    isLoading,\r\n    isFetching,\r\n    isLoadingAdd,\r\n    isErrorAdd,\r\n    isSuccessAdd,\r\n    add,\r\n    isLoadingUpdate,\r\n    isErrorUpdate,\r\n    update,\r\n    isLoadingRemove,\r\n    isErrorRemove,\r\n    remove,\r\n    mutatingTodoId,\r\n  };\r\n};\r\n\r\nexport default useTodos;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddTodo from \"../../components/add-todo/AddTodo\";\r\nimport ErrorDialog from \"../../components/error-dialog/ErrorDialog\";\r\nimport FullPageSpinner from \"../../components/full-page-spinner/FullPageSpinner\";\r\nimport Todo from \"../../components/todo/Todo\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport useTodos, { TodoInterface } from \"../../hooks/useTodos\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    absolute: {\r\n      position: \"absolute\",\r\n      zIndex: 3,\r\n    },\r\n  })\r\n);\r\n\r\nconst initialState: TodoInterface[] = [];\r\n\r\nconst TodoList = () => {\r\n  const [isOpenError, setIsOpenError] = useState(false);\r\n  const { userData, logOutUser } = useAuth();\r\n  const classes = useStyles();\r\n  const localId = userData ? userData.localId : \"\";\r\n  const {\r\n    data,\r\n    isFetching,\r\n    isError,\r\n    update,\r\n    isLoadingUpdate,\r\n    remove,\r\n    isLoadingRemove,\r\n    add,\r\n    isLoadingAdd,\r\n    mutatingTodoId,\r\n  } = useTodos(initialState);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      setIsOpenError(true);\r\n    }\r\n  }, [isError]);\r\n\r\n  function handleClose() {\r\n    localStorage.clear();\r\n    logOutUser();\r\n    setIsOpenError(false);\r\n  }\r\n\r\n  let todosJSX: JSX.Element | JSX.Element[] = (\r\n    <Typography variant=\"body1\">Add your first Todo</Typography>\r\n  );\r\n\r\n  if (isFetching) {\r\n    todosJSX = <FullPageSpinner />;\r\n  }\r\n\r\n  if (data && data.length) {\r\n    todosJSX = data.map((todo) => {\r\n      return (\r\n        <Todo\r\n          id={todo.id}\r\n          title={todo.title}\r\n          done={todo.done}\r\n          key={todo.id}\r\n          removeTodo={remove}\r\n          isLoadingRemove={isLoadingRemove}\r\n          updateTodo={update}\r\n          isLoadingUpdate={isLoadingUpdate}\r\n          localId={localId}\r\n          isMutating={mutatingTodoId === todo.id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      paddingTop=\"5rem\"\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <ErrorDialog open={isOpenError} handleClose={handleClose} />\r\n      {isFetching && (\r\n        <CircularProgress size={80} className={classes.absolute} />\r\n      )}\r\n      <AddTodo addTodo={add} localId={localId} isLoadingAdd={isLoadingAdd} />\r\n      {todosJSX}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"sourceRoot":""}