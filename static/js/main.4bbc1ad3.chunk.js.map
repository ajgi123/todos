{"version":3,"sources":["components/full-page-spinner/FullPageSpinner.tsx","components/shared/full-page-center.ts","components/error-fallback/ErrorFallback.tsx","components/navbar/Navbar.tsx","hooks/useLocalStorage.ts","hooks/useToggleTheme.ts","pages/shared/style.ts","pages/sign-in/SignIn.tsx","pages/sign-up/SignUp.tsx","App.tsx","index.tsx","hooks/useAsync.ts","hooks/useSafeDispatch.ts","helpers/asyncHelpers.ts","context/AuthProvider.tsx","components/form-text-field/FormTextField.tsx","helpers/localStorageService.ts"],"names":["FullPageSpinner","classes","useStyles","className","fullpage","size","makeStyles","theme","display","flexDirection","alignItems","justifyContent","width","height","ErrorFallback","error","resetErrorBoundary","role","message","onClick","createStyles","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","Navbar","props","useState","anchorEl","setAnchorEl","useAuth","isAuthenticated","userData","logOutUser","displayName","email","isMenuOpen","Boolean","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","AppBar","position","color","Toolbar","Typography","variant","noWrap","IconButton","toggleHandler","isDarkMode","edge","event","currentTarget","useLocalStorage","key","initialValue","initialiazeState","useCallback","localStorageService","getItem","storedValue","setStoredValue","useEffect","setItem","useToggleTheme","setIsDarkMode","palletType","createTheme","palette","type","prevState","paper","marginTop","avatar","margin","backgroundColor","secondary","main","form","submit","validationSchema","yup","required","password","min","SignIn","loginUser","status","rememberMe","setRemeberMe","history","useHistory","clickHandler","curState","Action","resolved","REFRESH_TOKEN_LOCAL_STORAGE","refreshToken","push","Container","component","maxWidth","Avatar","initialValues","onSubmit","values","name","placeholder","fullWidth","label","autoComplete","autoFocus","FormTextField","Tooltip","arrow","FormControlLabel","control","Checkbox","value","Button","disabled","pending","CircularProgress","Grid","container","direction","rejected","item","Link","RouterLink","to","confirmPassword","oneOf","SignUp","signUpUser","TodoList","React","lazy","PageNotFound","App","FallbackComponent","onReset","localStorage","clear","window","location","reload","ThemeProvider","CssBaseline","fallback","exact","path","queryClient","QueryClient","ReactDOM","render","basename","QueryClientProvider","client","AuthProvider","document","getElementById","Idle","useSafeDispatch","dispatch","mountedRef","useRef","useLayoutEffect","current","args","call","asyncReducer","prevstate","action","data","Error","useAsync","initialState","useReducer","idle","state","unSafeDispatch","runAsync","promise","then","setState","setError","tryCatch","a","signUpLoginInstance","axios","create","baseURL","process","headers","post","response","catch","err","Promise","reject","AuthContext","createContext","undefined","children","refresh","res","idToken","access_token","refresh_token","expiresIn","expires_in","localId","user_id","kind","registered","removeItem","alert","addTokenToHeader","config","url","refreshTokenOn401","resRefresh","console","log","index","lastIndexOf","slice","id_token","resAxios","returnSecureToken","signUp","login","Provider","context","useContext","isTouched","getIn","touched","field","errorMessage","errors","helperText","rest","JSON","stringify","otherwise","parse"],"mappings":"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","file":"static/js/main.4bbc1ad3.chunk.js","sourcesContent":["import { CircularProgress } from \"@material-ui/core\";\r\nimport { useStyles } from \"../shared/full-page-center\";\r\n\r\nconst FullPageSpinner = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.fullpage}>\r\n      <CircularProgress size={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPageSpinner;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  fullpage: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n  },\r\n}));\r\n","const ErrorFallback = ({\r\n  error,\r\n  resetErrorBoundary,\r\n}: {\r\n  error: Error;\r\n  resetErrorBoundary: () => void;\r\n}) => {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Something went wrong:</p>\r\n      <pre>{error.message}</pre>\r\n      <button onClick={resetErrorBoundary}>Try again</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorFallback;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype NavbarPropsType = {\r\n  isDarkMode: boolean;\r\n  toggleHandler: () => void;\r\n};\r\n\r\nexport default function Navbar(props: NavbarPropsType) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const { isAuthenticated, userData, logOutUser } = useAuth();\r\n  const displayName = userData?.displayName;\r\n  const email = userData?.email;\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem\r\n        onClick={() => {\r\n          logOutUser();\r\n          setAnchorEl(null);\r\n        }}\r\n      >\r\n        Log out\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Todo App\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton onClick={props.toggleHandler}>\r\n              {props.isDarkMode ? <Brightness4Icon /> : <Brightness3Icon />}\r\n            </IconButton>\r\n            {isAuthenticated && (\r\n              <>\r\n                {displayName || email}\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Dispatch,\r\n  SetStateAction,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { localStorageService } from \"../helpers/localStorageService\";\r\n\r\nconst useLocalStorage = <T>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, Dispatch<SetStateAction<T>>] => {\r\n  const initialiazeState = useCallback(() => {\r\n    const localData = localStorageService.getItem<T>(key, initialValue);\r\n    return localData;\r\n  }, [key, initialValue]);\r\n\r\n  const [storedValue, setStoredValue] = useState<T>(initialiazeState);\r\n\r\n  useEffect(() => {\r\n    setStoredValue(initialiazeState);\r\n  }, [initialiazeState]);\r\n\r\n  useEffect(() => {\r\n    localStorageService.setItem(key, storedValue);\r\n  }, [storedValue, key]);\r\n\r\n  return [storedValue, setStoredValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { createTheme } from \"@material-ui/core\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nconst useToggleTheme = () => {\r\n  const [isDarkMode, setIsDarkMode] = useLocalStorage(\"theme\", false);\r\n\r\n  const palletType = isDarkMode ? \"dark\" : \"light\";\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n\r\n  function toggleHandler() {\r\n    setIsDarkMode((prevState) => {\r\n      return !prevState;\r\n    });\r\n  }\r\n\r\n  return { isDarkMode, theme, toggleHandler };\r\n};\r\n\r\nexport default useToggleTheme;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(10),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { Field, Form, Formik, FormikProps } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FormTextField } from \"../../components/form-text-field/FormTextField\";\r\nimport {\r\n  REFRESH_TOKEN_LOCAL_STORAGE,\r\n  useAuth,\r\n} from \"../../context/AuthProvider\";\r\nimport { localStorageService } from \"../../helpers/localStorageService\";\r\nimport { Action } from \"../../hooks/useAsync\";\r\nimport { useStyles } from \"../shared/style\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const { loginUser, status, userData, error } = useAuth();\r\n  const [rememberMe, setRemeberMe] = useState(false);\r\n  let history = useHistory();\r\n\r\n  function submitHandler(email: string, password: string) {\r\n    loginUser(email, password);\r\n  }\r\n\r\n  function clickHandler() {\r\n    setRemeberMe((curState) => !curState);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (status === Action.resolved && userData) {\r\n      if (rememberMe && userData) {\r\n        localStorageService.setItem(\r\n          REFRESH_TOKEN_LOCAL_STORAGE,\r\n          userData.refreshToken\r\n        );\r\n      }\r\n      history.push(\"/todos\");\r\n    }\r\n  }, [status, history, rememberMe, userData]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={(values) => submitHandler(values.email, values.password)}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(props: FormikProps<any>) => (\r\n            <Form>\r\n              <Field\r\n                name=\"email\"\r\n                margin=\"normal\"\r\n                placeholder=\"Email\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                component={FormTextField}\r\n              />\r\n              <Field\r\n                name=\"password\"\r\n                margin=\"normal\"\r\n                placeholder=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                component={FormTextField}\r\n              />\r\n              <Tooltip\r\n                title=\"Refresh token will be stored in local storage\"\r\n                arrow\r\n              >\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                  value={rememberMe}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Tooltip>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={status === Action.pending}\r\n              >\r\n                {status === Action.pending ? <CircularProgress /> : \"Sign In\"}\r\n              </Button>\r\n\r\n              <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n              >\r\n                {status === Action.rejected && (\r\n                  <Grid item>\r\n                    <Typography variant=\"subtitle1\">{error}</Typography>\r\n                  </Grid>\r\n                )}\r\n                <Grid item>\r\n                  <Link\r\n                    variant=\"body2\"\r\n                    color=\"inherit\"\r\n                    component={RouterLink}\r\n                    to=\"/signup\"\r\n                  >\r\n                    Don't have an account? Sign Up\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { Field, Form, Formik, FormikProps } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FormTextField } from \"../../components/form-text-field/FormTextField\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { Action } from \"../../hooks/useAsync\";\r\nimport { useStyles } from \"../shared/style\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(\"Name is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password must contain atleast 8 characters\")\r\n    .required(\"Enter your password\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Confirm your password\")\r\n    .oneOf([yup.ref(\"password\")], \"Password does not match\"),\r\n});\r\n\r\nconst SignUp = () => {\r\n  const classes = useStyles();\r\n  const { signUpUser, status, error } = useAuth();\r\n  let history = useHistory();\r\n\r\n  function submitHandler(email: string, password: string, name: string) {\r\n    signUpUser(email, password, name);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (status === Action.resolved) {\r\n      history.push(\"/todos\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          onSubmit={(values) =>\r\n            submitHandler(values.email, values.password, values.name)\r\n          }\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(props: FormikProps<any>) => (\r\n            <Form>\r\n              <Field\r\n                name=\"name\"\r\n                margin=\"normal\"\r\n                placeholder=\"Email\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n                component={FormTextField}\r\n              />\r\n              <Field\r\n                name=\"email\"\r\n                margin=\"normal\"\r\n                placeholder=\"Email\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                component={FormTextField}\r\n              />\r\n              <Field\r\n                name=\"password\"\r\n                margin=\"normal\"\r\n                placeholder=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                component={FormTextField}\r\n              />\r\n              <Field\r\n                name=\"confirmPassword\"\r\n                margin=\"normal\"\r\n                placeholder=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmpassword\"\r\n                component={FormTextField}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={status === Action.pending}\r\n              >\r\n                {status === Action.pending ? <CircularProgress /> : \"Sign In\"}\r\n              </Button>\r\n              <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n              >\r\n                {status === Action.rejected && (\r\n                  <Grid item>\r\n                    <Typography variant=\"subtitle1\">{error}</Typography>\r\n                  </Grid>\r\n                )}\r\n                <Grid item>\r\n                  <Link\r\n                    variant=\"body2\"\r\n                    color=\"inherit\"\r\n                    component={RouterLink}\r\n                    to=\"/\"\r\n                  >\r\n                    Already have an account? Sign In\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport React, { Suspense } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport ErrorFallback from \"./components/error-fallback/ErrorFallback\";\nimport FullPageSpinner from \"./components/full-page-spinner/FullPageSpinner\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport { useAuth } from \"./context/AuthProvider\";\nimport useToggleTheme from \"./hooks/useToggleTheme\";\nimport SignIn from \"./pages/sign-in/SignIn\";\nimport SignUp from \"./pages/sign-up/SignUp\";\n\nconst TodoList = React.lazy(() => import(\"./pages/todo-list/TodoList\"));\nconst PageNotFound = React.lazy(\n  () => import(\"./components/page-not-found/PageNotFound\")\n);\n\nfunction App() {\n  const { theme, isDarkMode, toggleHandler } = useToggleTheme();\n  const { isAuthenticated } = useAuth();\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback}\n      onReset={() => {\n        localStorage.clear();\n        window.location.reload(false);\n      }}\n    >\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <Navbar isDarkMode={isDarkMode} toggleHandler={toggleHandler} />\n        <Suspense fallback={<FullPageSpinner />}>\n          <Switch>\n            <Route exact path=\"/\">\n              <SignIn />\n            </Route>\n            <Route path=\"/signup\">\n              <SignUp />\n            </Route>\n            <Route path=\"/todos\">\n              {isAuthenticated ? <TodoList /> : <Redirect to=\"/\" />}\n            </Route>\n            <Route path=\"/404\">\n              <PageNotFound />\n            </Route>\n            <Route>\n              <Redirect to=\"/404\" />\n            </Route>\n          </Switch>\n        </Suspense>\n      </ThemeProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthProvider } from \"./context/AuthProvider\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <BrowserRouter basename=\"/todos\">\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </QueryClientProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import { Reducer, useCallback, useReducer } from \"react\";\r\nimport useSafeDispatch from \"./useSafeDispatch\";\r\n\r\nexport enum Action {\r\n  pending = \"pending\",\r\n  resolved = \"resolved\",\r\n  rejected = \"rejected\",\r\n}\r\n\r\nenum Idle {\r\n  idle = \"idle\",\r\n}\r\n\r\nexport type Status = Action | Idle;\r\n\r\ntype ActionType<T> =\r\n  | {\r\n      type: Action.pending;\r\n    }\r\n  | {\r\n      type: Action.resolved;\r\n      data: T;\r\n    }\r\n  | {\r\n      type: Action.rejected;\r\n      error: string;\r\n    };\r\n\r\ntype StateType<T> = {\r\n  data: T | null;\r\n  status: Status;\r\n  error: string | null;\r\n};\r\n\r\nfunction asyncReducer<T>(\r\n  prevstate: StateType<T>,\r\n  action: ActionType<T>\r\n): StateType<T> {\r\n  switch (action.type) {\r\n    case Action.pending: {\r\n      return { status: Action.pending, data: null, error: null };\r\n    }\r\n    case Action.resolved: {\r\n      return { status: Action.resolved, data: action.data, error: null };\r\n    }\r\n    case Action.rejected: {\r\n      return { status: Action.rejected, data: null, error: action.error };\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled action type`);\r\n    }\r\n  }\r\n}\r\n\r\nconst useAsync = <T>(initialState: T) => {\r\n  const [state, unSafeDispatch] = useReducer<\r\n    Reducer<StateType<T>, ActionType<T>>\r\n  >(asyncReducer, {\r\n    status: Idle.idle,\r\n    data: initialState,\r\n    error: null,\r\n  });\r\n\r\n  const dispatch = useSafeDispatch(unSafeDispatch);\r\n\r\n  const { data, error, status } = state;\r\n\r\n  const runAsync = useCallback(\r\n    (promise: Promise<T>) => {\r\n      dispatch({ type: Action.pending });\r\n      promise.then(\r\n        (data) => {\r\n          dispatch({ type: Action.resolved, data });\r\n        },\r\n        (error) => {\r\n          dispatch({ type: Action.rejected, error });\r\n        }\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setState = useCallback(\r\n    (data: T) => {\r\n      dispatch({ type: Action.resolved, data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setError = useCallback(\r\n    (error) => {\r\n      dispatch({ type: Action.rejected, error });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    error,\r\n    status,\r\n    data,\r\n    runAsync,\r\n    setState,\r\n    setError,\r\n  };\r\n};\r\n\r\nexport default useAsync;\r\n","import { Dispatch, useCallback, useLayoutEffect, useRef } from \"react\";\r\n\r\nconst useSafeDispatch = <T extends Dispatch<any>>(dispatch: T) => {\r\n  const mountedRef = useRef(false);\r\n\r\n  useLayoutEffect(() => {\r\n    mountedRef.current = true;\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return useCallback(\r\n    (...args: Parameters<T>) => {\r\n      mountedRef.current ? dispatch.call(null, ...args) : void 0;\r\n    },\r\n    [dispatch]\r\n  );\r\n};\r\n\r\nexport default useSafeDispatch;\r\n","export const tryCatch = async <T extends Promise<any>>(\r\n  promise: T\r\n): Promise<[any, any]> => {\r\n  try {\r\n    const data = await promise;\r\n    return [data, null];\r\n  } catch (error) {\r\n    return [null, error];\r\n  }\r\n};\r\n","import axios, { AxiosError, AxiosRequestConfig } from \"axios\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { tryCatch } from \"../helpers/asyncHelpers\";\r\nimport { localStorageService } from \"../helpers/localStorageService\";\r\nimport useAsync, { Status } from \"../hooks/useAsync\";\r\n\r\nexport const REFRESH_TOKEN_LOCAL_STORAGE = \"refreshToken\";\r\n\r\nconst signUpLoginInstance = axios.create({\r\n  baseURL: `${process.env.REACT_APP_AUTH_URL}`,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst login = (email: string, password: string) => {\r\n  return signUpLoginInstance\r\n    .post(\r\n      `/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_KEY}`,\r\n      {\r\n        email,\r\n        password,\r\n        returnSecureToken: true,\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err.message);\r\n    });\r\n};\r\n\r\nconst signUp = (email: string, password: string, displayName: string) => {\r\n  return signUpLoginInstance\r\n    .post(`/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`, {\r\n      email,\r\n      password,\r\n      displayName,\r\n      returnSecureToken: true,\r\n    })\r\n    .then((response) => response.data)\r\n    .catch((err) => Promise.reject(err.message));\r\n};\r\n\r\ninterface RefreshTokenResponse {\r\n  access_token: string;\r\n  expires_in: number;\r\n  id_token: string;\r\n  project_id: string;\r\n  refresh_token: string;\r\n  token_type: string;\r\n  user_id: string;\r\n}\r\n\r\nconst refreshToken = (refreshToken: string): Promise<RefreshTokenResponse> => {\r\n  return axios\r\n    .post(\r\n      `${process.env.REACT_APP_REFRESH_TOKEN_URL}`,\r\n      `grant_type=refresh_token&refresh_token=${refreshToken}`,\r\n      { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\r\n    )\r\n    .then((response) => response.data)\r\n    .catch((err) => Promise.reject(err));\r\n};\r\n\r\ninterface User {\r\n  idToken: string;\r\n  email: string;\r\n  refreshToken: string;\r\n  expiresIn: number;\r\n  localId: string;\r\n  displayName: string;\r\n  kind: string;\r\n  registered: boolean;\r\n}\r\n\r\ntype unionType = User | null;\r\n\r\ntype AuthContextType = {\r\n  error: string | null;\r\n  status: Status;\r\n  userData: unionType;\r\n  signUpUser: (email: string, password: string, displayName: string) => void;\r\n  loginUser: (email: string, password: string) => void;\r\n  logOutUser: () => void;\r\n  addTokenToHeader: (config: AxiosRequestConfig) => AxiosRequestConfig;\r\n  refreshTokenOn401: (error: AxiosError) => void;\r\n  isAuthenticated: boolean;\r\n};\r\n\r\nconst AuthContext = createContext<undefined | AuthContextType>(undefined);\r\n\r\nlet initialState: unionType;\r\ninitialState = null;\r\n\r\ntype AuthProviderPropsType = { children: ReactNode };\r\n\r\nexport const AuthProvider = ({ children }: AuthProviderPropsType) => {\r\n  const {\r\n    error,\r\n    status,\r\n    data: userData,\r\n    runAsync,\r\n    setState,\r\n    setError,\r\n  } = useAsync(initialState);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const refresh = localStorageService.getItem(\r\n      REFRESH_TOKEN_LOCAL_STORAGE\r\n    ) as string;\r\n    if (refresh) {\r\n      refreshToken(refresh)\r\n        .then((res) => {\r\n          setState({\r\n            idToken: res.access_token,\r\n            email: \"\",\r\n            refreshToken: res.refresh_token,\r\n            expiresIn: res.expires_in,\r\n            localId: res.user_id,\r\n            displayName: \"\",\r\n            kind: \"\",\r\n            registered: true,\r\n          });\r\n          history.push(\"/todos\");\r\n        })\r\n        .catch((err) => {\r\n          localStorage.removeItem(REFRESH_TOKEN_LOCAL_STORAGE);\r\n          alert(\"Failed to refresh Token\");\r\n        });\r\n    }\r\n  }, [setState, history]);\r\n\r\n  function signUpUser(email: string, password: string, displayName: string) {\r\n    runAsync(signUp(email, password, displayName));\r\n  }\r\n\r\n  function loginUser(email: string, password: string) {\r\n    runAsync(login(email, password));\r\n  }\r\n\r\n  function logOutUser() {\r\n    localStorage.removeItem(REFRESH_TOKEN_LOCAL_STORAGE);\r\n    setError(\"Log out\");\r\n  }\r\n\r\n  const addTokenToHeader = useCallback(\r\n    (config: AxiosRequestConfig) => {\r\n      if (userData) {\r\n        config.url = `${config.url}?auth=${userData.idToken}`;\r\n      }\r\n      return config;\r\n    },\r\n    [userData]\r\n  );\r\n\r\n  const refreshTokenOn401 = useCallback(\r\n    async (error: AxiosError) => {\r\n      const code = error.response ? error.response.status : 0;\r\n      if (code === 401 && userData) {\r\n        const [resRefresh] = await tryCatch(\r\n          refreshToken(userData.refreshToken)\r\n        );\r\n\r\n        if (resRefresh) {\r\n          console.log(\"refresh true\", resRefresh);\r\n          setState({\r\n            ...userData,\r\n            idToken: resRefresh.access_token,\r\n            refreshToken: resRefresh.refresh_token,\r\n          });\r\n          const index = error.config.url?.lastIndexOf(\"auth=\");\r\n          error.config.url = `${error.config.url?.slice(0, index)}auth=${\r\n            resRefresh.id_token\r\n          }`;\r\n        }\r\n\r\n        const [resAxios] = await tryCatch(axios(error.config));\r\n        if (resAxios) {\r\n          return resAxios;\r\n        }\r\n      }\r\n      return Promise.reject(error);\r\n    },\r\n    [userData, setState]\r\n  );\r\n\r\n  const isAuthenticated = !!userData;\r\n\r\n  const value = {\r\n    error,\r\n    status,\r\n    userData,\r\n    signUpUser,\r\n    loginUser,\r\n    logOutUser,\r\n    addTokenToHeader,\r\n    refreshTokenOn401,\r\n    isAuthenticated,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within a AuthProvider\");\r\n  }\r\n\r\n  return context;\r\n}\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { FieldProps, getIn } from \"formik\";\r\nimport React from \"react\";\r\n\r\ntype Props = FieldProps & TextFieldProps;\r\nexport const FormTextField = (props: Props) => {\r\n  const isTouched = getIn(props.form.touched, props.field.name);\r\n  const errorMessage = getIn(props.form.errors, props.field.name);\r\n\r\n  const { error, helperText, field, form, ...rest } = props;\r\n\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      error={error ?? Boolean(isTouched && errorMessage)}\r\n      helperText={\r\n        helperText ?? (isTouched && errorMessage ? errorMessage : undefined)\r\n      }\r\n      {...rest}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n","class LocalStorageService {\r\n  setItem(key: string, value: any): void {\r\n    localStorage.setItem(key, JSON.stringify({ value }));\r\n  }\r\n\r\n  getItem<T>(key: string): T | null;\r\n  getItem<T>(key: string, otherwise: T): T;\r\n  getItem<T>(key: string, otherwise?: T): T | null {\r\n    const data: string | null = localStorage.getItem(key);\r\n    if (data !== null) {\r\n      return JSON.parse(data).value;\r\n    }\r\n\r\n    if (otherwise) {\r\n      return otherwise;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const localStorageService = new LocalStorageService();\r\n"],"sourceRoot":""}