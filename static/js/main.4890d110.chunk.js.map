{"version":3,"sources":["helpers/asyncHelpers.ts","context/AuthProvider.tsx","components/error-fallback/ErrorFallback.tsx","components/navbar/Navbar.tsx","components/page-not-found/PageNotFound.tsx","components/protected-route/PrivateRoute.tsx","hooks/useLocalStorage.ts","hooks/useToggleTheme.ts","pages/sign-up/style.ts","pages/sign-in/SignIn.tsx","pages/sign-up/SignUp.tsx","App.tsx","index.tsx","hooks/useAsync.ts","hooks/useSafeDispatch.ts","components/form-text-field/FormTextField.tsx","helpers/localStorageService.ts","components/full-page-spinner/FullPageSpinner.tsx"],"names":["tryCatch","promise","a","data","REFRESH_TOKEN_LOCAL_STORAGE","signUpLoginInstance","axios","create","baseURL","process","headers","refreshToken","post","then","response","catch","err","Promise","reject","AuthContext","createContext","undefined","AuthProvider","children","useAsync","error","status","userData","runAsync","setState","setError","useEffect","refresh","localStorageService","getItem","res","addTokenToHeader","useCallback","config","url","idToken","refreshTokenOn401","resRefresh","access_token","refresh_token","index","lastIndexOf","slice","id_token","resAxios","value","signUpUser","email","password","displayName","returnSecureToken","message","signUp","loginUser","login","logOutUser","localStorage","removeItem","isAuthenticated","Provider","useAuth","context","useContext","Error","ErrorFallback","resetErrorBoundary","role","onClick","useStyles","makeStyles","theme","createStyles","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","Navbar","props","classes","useState","anchorEl","setAnchorEl","isMenuOpen","Boolean","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","className","AppBar","position","color","Toolbar","Typography","variant","noWrap","IconButton","toggleHandler","isDarkMode","edge","event","currentTarget","PageNotFound","fullpage","PrivateRoute","componentPath","rederictToPath","path","render","location","to","pathname","state","from","useLocalStorage","key","initialValue","initialiazeState","storedValue","setStoredValue","setItem","useToggleTheme","setIsDarkMode","palletType","createTheme","palette","type","prevState","paper","marginTop","flexDirection","alignItems","avatar","margin","backgroundColor","secondary","main","form","width","submit","validationSchema","yup","required","min","SignIn","rememberMe","setRemeberMe","history","useHistory","clickHandler","curState","Action","resolved","push","Container","component","maxWidth","Avatar","initialValues","onSubmit","values","name","placeholder","fullWidth","label","autoComplete","autoFocus","FormTextField","Tooltip","arrow","FormControlLabel","control","Checkbox","Button","disabled","pending","CircularProgress","Grid","container","justifyContent","direction","rejected","item","confirmPassword","oneOf","SignUp","TodoList","React","lazy","App","FallbackComponent","onReset","clear","window","reload","ThemeProvider","CssBaseline","fallback","FullPageSpinner","queryClient","QueryClient","ReactDOM","basename","QueryClientProvider","client","document","getElementById","Idle","useSafeDispatch","dispatch","mountedRef","useRef","useLayoutEffect","current","args","call","asyncReducer","prevstate","action","initialState","useReducer","idle","unSafeDispatch","isTouched","getIn","touched","field","errorMessage","errors","helperText","rest","JSON","stringify","otherwise","parse","height","size"],"mappings":"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","file":"static/js/main.4890d110.chunk.js","sourcesContent":["export const tryCatch = async <T extends Promise<any>>(\r\n  promise: T\r\n): Promise<[any, any]> => {\r\n  try {\r\n    const data = await promise;\r\n    return [data, null];\r\n  } catch (error) {\r\n    return [null, error];\r\n  }\r\n};\r\n","import axios, { AxiosError, AxiosRequestConfig } from \"axios\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n} from \"react\";\r\nimport { tryCatch } from \"../helpers/asyncHelpers\";\r\nimport { localStorageService } from \"../helpers/localStorageService\";\r\nimport useAsync, { Status } from \"../hooks/useAsync\";\r\n\r\nexport const REFRESH_TOKEN_LOCAL_STORAGE = \"refreshToken\";\r\n\r\nconst signUpLoginInstance = axios.create({\r\n  baseURL: `${process.env.REACT_APP_AUTH_URL}`,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst login = (email: string, password: string) => {\r\n  return signUpLoginInstance\r\n    .post(\r\n      `/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_KEY}`,\r\n      {\r\n        email,\r\n        password,\r\n        returnSecureToken: true,\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err.message);\r\n    });\r\n};\r\n\r\nconst signUp = (email: string, password: string, displayName: string) => {\r\n  return signUpLoginInstance\r\n    .post(`/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`, {\r\n      email,\r\n      password,\r\n      displayName,\r\n      returnSecureToken: true,\r\n    })\r\n    .then((response) => response.data)\r\n    .catch((err) => Promise.reject(err.message));\r\n};\r\n\r\ninterface RefreshTokenResponse {\r\n  access_token: string;\r\n  expires_in: number;\r\n  id_token: string;\r\n  project_id: string;\r\n  refresh_token: string;\r\n  token_type: string;\r\n  user_id: string;\r\n}\r\n\r\nconst refreshToken = (refreshToken: string): Promise<RefreshTokenResponse> => {\r\n  return axios\r\n    .post(\r\n      `${process.env.REACT_APP_REFRESH_TOKEN_URL}`,\r\n      `grant_type=refresh_token&refresh_token=${refreshToken}`,\r\n      { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\r\n    )\r\n    .then((response) => response.data)\r\n    .catch((err) => Promise.reject(err));\r\n};\r\n\r\ninterface User {\r\n  idToken: string;\r\n  email: string;\r\n  refreshToken: string;\r\n  expiresIn: number;\r\n  localId: string;\r\n  displayName: string;\r\n  kind: string;\r\n  registered: boolean;\r\n}\r\n\r\ntype unionType = User | null;\r\n\r\ntype AuthContextType = {\r\n  error: string | null;\r\n  status: Status;\r\n  userData: unionType;\r\n  signUpUser: (email: string, password: string, displayName: string) => void;\r\n  loginUser: (email: string, password: string) => void;\r\n  logOutUser: () => void;\r\n  addTokenToHeader: (config: AxiosRequestConfig) => AxiosRequestConfig;\r\n  refreshTokenOn401: (error: AxiosError) => void;\r\n  isAuthenticated: boolean;\r\n};\r\n\r\nconst AuthContext = createContext<undefined | AuthContextType>(undefined);\r\n\r\nlet initialState: unionType;\r\ninitialState = null;\r\n\r\ntype AuthProviderPropsType = { children: ReactNode };\r\n\r\nexport const AuthProvider = ({ children }: AuthProviderPropsType) => {\r\n  const {\r\n    error,\r\n    status,\r\n    data: userData,\r\n    runAsync,\r\n    setState,\r\n    setError,\r\n  } = useAsync(initialState);\r\n\r\n  useEffect(() => {\r\n    const refresh = localStorageService.getItem(\r\n      REFRESH_TOKEN_LOCAL_STORAGE\r\n    ) as string;\r\n    if (refresh) {\r\n      refreshToken(refresh).then((res) => res);\r\n    }\r\n  }, []);\r\n\r\n  function signUpUser(email: string, password: string, displayName: string) {\r\n    runAsync(signUp(email, password, displayName));\r\n  }\r\n\r\n  function loginUser(email: string, password: string) {\r\n    runAsync(login(email, password));\r\n  }\r\n\r\n  function logOutUser() {\r\n    localStorage.removeItem(REFRESH_TOKEN_LOCAL_STORAGE);\r\n    setError(\"Log out\");\r\n  }\r\n\r\n  const addTokenToHeader = useCallback(\r\n    (config: AxiosRequestConfig) => {\r\n      if (userData) {\r\n        config.url = `${config.url}?auth=${userData.idToken}`;\r\n      }\r\n      return config;\r\n    },\r\n    [userData]\r\n  );\r\n\r\n  const refreshTokenOn401 = useCallback(\r\n    async (error: AxiosError) => {\r\n      const code = error.response ? error.response.status : 0;\r\n      if (code === 401 && userData) {\r\n        const [resRefresh] = await tryCatch(\r\n          refreshToken(userData.refreshToken)\r\n        );\r\n\r\n        if (resRefresh) {\r\n          setState({\r\n            ...userData,\r\n            idToken: resRefresh.data.access_token,\r\n            refreshToken: resRefresh.data.refresh_token,\r\n          });\r\n          const index = error.config.url?.lastIndexOf(\"auth=\");\r\n          error.config.url = `${error.config.url?.slice(0, index)}auth=${\r\n            resRefresh.data.id_token\r\n          }`;\r\n        }\r\n\r\n        const [resAxios] = await tryCatch(axios(error.config));\r\n        if (resAxios) {\r\n          return resAxios;\r\n        }\r\n      }\r\n      return Promise.reject(error);\r\n    },\r\n    [userData, setState]\r\n  );\r\n\r\n  const isAuthenticated = !!userData;\r\n\r\n  const value = {\r\n    error,\r\n    status,\r\n    userData,\r\n    signUpUser,\r\n    loginUser,\r\n    logOutUser,\r\n    addTokenToHeader,\r\n    refreshTokenOn401,\r\n    isAuthenticated,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within a AuthProvider\");\r\n  }\r\n\r\n  return context;\r\n}\r\n","const ErrorFallback = ({\r\n  error,\r\n  resetErrorBoundary,\r\n}: {\r\n  error: Error;\r\n  resetErrorBoundary: () => void;\r\n}) => {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Something went wrong:</p>\r\n      <pre>{error.message}</pre>\r\n      <button onClick={resetErrorBoundary}>Try again</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorFallback;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype NavbarPropsType = {\r\n  isDarkMode: boolean;\r\n  toggleHandler: () => void;\r\n};\r\n\r\nexport default function Navbar(props: NavbarPropsType) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const { isAuthenticated, userData, logOutUser } = useAuth();\r\n  const displayName = userData?.displayName;\r\n  const email = userData?.email;\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem\r\n        onClick={() => {\r\n          logOutUser();\r\n        }}\r\n      >\r\n        Log out\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Todo App\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton onClick={props.toggleHandler}>\r\n              {props.isDarkMode ? <Brightness4Icon /> : <Brightness3Icon />}\r\n            </IconButton>\r\n            {isAuthenticated && (\r\n              <>\r\n                {displayName || email}\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport { useStyles } from \"../full-page-spinner/FullPageSpinner\";\r\n\r\nconst PageNotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.fullpage}>\r\n      <Typography variant=\"h2\">Page Not Found</Typography>\r\n      <Typography variant=\"h1\">404</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import { ReactNode } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\n\r\ntype PrivateRoutePropsType = {\r\n  children: ReactNode;\r\n  componentPath: string;\r\n  rederictToPath: string;\r\n};\r\n\r\nconst PrivateRoute = ({\r\n  children,\r\n  componentPath,\r\n  rederictToPath,\r\n}: PrivateRoutePropsType) => {\r\n  const { isAuthenticated } = useAuth();\r\n  return (\r\n    <Route\r\n      path={componentPath}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: rederictToPath,\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import {\r\n  Dispatch,\r\n  SetStateAction,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { localStorageService } from \"../helpers/localStorageService\";\r\n\r\nconst useLocalStorage = <T>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, Dispatch<SetStateAction<T>>] => {\r\n  const initialiazeState = useCallback(() => {\r\n    const localData = localStorageService.getItem<T>(key, initialValue);\r\n    return localData;\r\n  }, [key, initialValue]);\r\n\r\n  const [storedValue, setStoredValue] = useState<T>(initialiazeState);\r\n\r\n  useEffect(() => {\r\n    setStoredValue(initialiazeState);\r\n  }, [initialiazeState]);\r\n\r\n  useEffect(() => {\r\n    localStorageService.setItem(key, storedValue);\r\n  }, [storedValue, key]);\r\n\r\n  return [storedValue, setStoredValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { createTheme } from \"@material-ui/core\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nconst useToggleTheme = () => {\r\n  const [isDarkMode, setIsDarkMode] = useLocalStorage(\"theme\", false);\r\n\r\n  const palletType = isDarkMode ? \"dark\" : \"light\";\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n\r\n  function toggleHandler() {\r\n    setIsDarkMode((prevState) => {\r\n      return !prevState;\r\n    });\r\n  }\r\n\r\n  return { isDarkMode, theme, toggleHandler };\r\n};\r\n\r\nexport default useToggleTheme;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(10),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { Field, Form, Formik, FormikProps } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FormTextField } from \"../../components/form-text-field/FormTextField\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { localStorageService } from \"../../helpers/localStorageService\";\r\nimport { Action } from \"../../hooks/useAsync\";\r\nimport { useStyles } from \"../sign-up/style\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { REFRESH_TOKEN_LOCAL_STORAGE } from \"../../context/AuthProvider\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const { loginUser, status, userData, error } = useAuth();\r\n  const [rememberMe, setRemeberMe] = useState(false);\r\n  let history = useHistory();\r\n\r\n  function submitHandler(email: string, password: string) {\r\n    loginUser(email, password);\r\n  }\r\n\r\n  function clickHandler() {\r\n    setRemeberMe((curState) => !curState);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (status === Action.resolved && userData) {\r\n      if (rememberMe && userData) {\r\n        localStorageService.setItem(\r\n          REFRESH_TOKEN_LOCAL_STORAGE,\r\n          userData.refreshToken\r\n        );\r\n      }\r\n      history.push(\"/todos\");\r\n    }\r\n  }, [status, history, rememberMe, userData]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={(values) => submitHandler(values.email, values.password)}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(props: FormikProps<any>) => (\r\n            <Form>\r\n              <Field\r\n                name=\"email\"\r\n                margin=\"normal\"\r\n                placeholder=\"Email\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                component={FormTextField}\r\n              />\r\n              <Field\r\n                name=\"password\"\r\n                margin=\"normal\"\r\n                placeholder=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                component={FormTextField}\r\n              />\r\n              <Tooltip\r\n                title=\"Refresh token will be stored in local storage\"\r\n                arrow\r\n              >\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                  value={rememberMe}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Tooltip>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={status === Action.pending}\r\n              >\r\n                {status === Action.pending ? <CircularProgress /> : \"Sign In\"}\r\n              </Button>\r\n\r\n              <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n              >\r\n                {status === Action.rejected && (\r\n                  <Grid item>\r\n                    <Typography variant=\"subtitle1\">{error}</Typography>\r\n                  </Grid>\r\n                )}\r\n                <Grid item>\r\n                  <Link to=\"/signup\">Don't have an account? Sign Up</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { Field, Form, Formik, FormikProps } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FormTextField } from \"../../components/form-text-field/FormTextField\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { Action } from \"../../hooks/useAsync\";\r\nimport { useStyles } from \"./style\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(\"Name is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password must contain atleast 8 characters\")\r\n    .required(\"Enter your password\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Confirm your password\")\r\n    .oneOf([yup.ref(\"password\")], \"Password does not match\"),\r\n});\r\n\r\nconst SignUp = () => {\r\n  const classes = useStyles();\r\n  const { signUpUser, status, error } = useAuth();\r\n  let history = useHistory();\r\n\r\n  function submitHandler(email: string, password: string, name: string) {\r\n    signUpUser(email, password, name);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (status === Action.resolved) {\r\n      history.push(\"/todos\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          onSubmit={(values) =>\r\n            submitHandler(values.email, values.password, values.name)\r\n          }\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(props: FormikProps<any>) => (\r\n            <Form>\r\n              <Field\r\n                name=\"name\"\r\n                margin=\"normal\"\r\n                placeholder=\"Email\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n                component={FormTextField}\r\n              />\r\n              <Field\r\n                name=\"email\"\r\n                margin=\"normal\"\r\n                placeholder=\"Email\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                component={FormTextField}\r\n              />\r\n              <Field\r\n                name=\"password\"\r\n                margin=\"normal\"\r\n                placeholder=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                component={FormTextField}\r\n              />\r\n              <Field\r\n                name=\"confirmPassword\"\r\n                margin=\"normal\"\r\n                placeholder=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmpassword\"\r\n                component={FormTextField}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={status === Action.pending}\r\n              >\r\n                {status === Action.pending ? <CircularProgress /> : \"Sign In\"}\r\n              </Button>\r\n              <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n              >\r\n                {status === Action.rejected && (\r\n                  <Grid item>\r\n                    <Typography variant=\"subtitle1\">{error}</Typography>\r\n                  </Grid>\r\n                )}\r\n                <Grid item>\r\n                  <Link to=\"/login\">Already have an account? Sign In</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport React, { Suspense } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ErrorFallback from \"./components/error-fallback/ErrorFallback\";\nimport FullPageSpinner from \"./components/full-page-spinner/FullPageSpinner\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport PageNotFound from \"./components/page-not-found/PageNotFound\";\nimport PrivateRoute from \"./components/protected-route/PrivateRoute\";\nimport useToggleTheme from \"./hooks/useToggleTheme\";\nimport SignIn from \"./pages/sign-in/SignIn\";\nimport SignUp from \"./pages/sign-up/SignUp\";\n\nconst TodoList = React.lazy(() => import(\"./pages/todo-list/TodoList\"));\n\nfunction App() {\n  const { theme, isDarkMode, toggleHandler } = useToggleTheme();\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback}\n      onReset={() => {\n        localStorage.clear();\n        window.location.reload(false);\n      }}\n    >\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Navbar isDarkMode={isDarkMode} toggleHandler={toggleHandler} />\n        <Switch>\n          <Route path=\"/login\">\n            <SignIn />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Suspense fallback={<FullPageSpinner />}>\n            <PrivateRoute componentPath=\"/todos\" rederictToPath=\"/login\">\n              <TodoList />\n            </PrivateRoute>\n          </Suspense>\n          <Route path=\"*\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport \"./index.css\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <BrowserRouter basename=\"/todos\">\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </QueryClientProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import { Reducer, useCallback, useReducer } from \"react\";\r\nimport useSafeDispatch from \"./useSafeDispatch\";\r\n\r\nexport enum Action {\r\n  pending = \"pending\",\r\n  resolved = \"resolved\",\r\n  rejected = \"rejected\",\r\n}\r\n\r\nenum Idle {\r\n  idle = \"idle\",\r\n}\r\n\r\nexport type Status = Action | Idle;\r\n\r\ntype ActionType<T> =\r\n  | {\r\n      type: Action.pending;\r\n    }\r\n  | {\r\n      type: Action.resolved;\r\n      data: T;\r\n    }\r\n  | {\r\n      type: Action.rejected;\r\n      error: string;\r\n    };\r\n\r\ntype StateType<T> = {\r\n  data: T | null;\r\n  status: Status;\r\n  error: string | null;\r\n};\r\n\r\nfunction asyncReducer<T>(\r\n  prevstate: StateType<T>,\r\n  action: ActionType<T>\r\n): StateType<T> {\r\n  switch (action.type) {\r\n    case Action.pending: {\r\n      return { status: Action.pending, data: null, error: null };\r\n    }\r\n    case Action.resolved: {\r\n      return { status: Action.resolved, data: action.data, error: null };\r\n    }\r\n    case Action.rejected: {\r\n      return { status: Action.rejected, data: null, error: action.error };\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled action type`);\r\n    }\r\n  }\r\n}\r\n\r\nconst useAsync = <T>(initialState: T) => {\r\n  const [state, unSafeDispatch] = useReducer<\r\n    Reducer<StateType<T>, ActionType<T>>\r\n  >(asyncReducer, {\r\n    status: Idle.idle,\r\n    data: initialState,\r\n    error: null,\r\n  });\r\n\r\n  const dispatch = useSafeDispatch(unSafeDispatch);\r\n\r\n  const { data, error, status } = state;\r\n\r\n  const runAsync = useCallback(\r\n    (promise: Promise<T>) => {\r\n      dispatch({ type: Action.pending });\r\n      promise.then(\r\n        (data) => {\r\n          dispatch({ type: Action.resolved, data });\r\n        },\r\n        (error) => {\r\n          dispatch({ type: Action.rejected, error });\r\n        }\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setState = useCallback(\r\n    (data: T) => {\r\n      dispatch({ type: Action.resolved, data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setError = useCallback(\r\n    (error) => {\r\n      dispatch({ type: Action.rejected, error });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    error,\r\n    status,\r\n    data,\r\n    runAsync,\r\n    setState,\r\n    setError,\r\n  };\r\n};\r\n\r\nexport default useAsync;\r\n","import { Dispatch, useCallback, useLayoutEffect, useRef } from \"react\";\r\n\r\nconst useSafeDispatch = <T extends Dispatch<any>>(dispatch: T) => {\r\n  const mountedRef = useRef(false);\r\n\r\n  useLayoutEffect(() => {\r\n    mountedRef.current = true;\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return useCallback(\r\n    (...args: Parameters<T>) => {\r\n      mountedRef.current ? dispatch.call(null, ...args) : void 0;\r\n    },\r\n    [dispatch]\r\n  );\r\n};\r\n\r\nexport default useSafeDispatch;\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { FieldProps, getIn } from \"formik\";\r\nimport React from \"react\";\r\n\r\ntype Props = FieldProps & TextFieldProps;\r\nexport const FormTextField = (props: Props) => {\r\n  const isTouched = getIn(props.form.touched, props.field.name);\r\n  const errorMessage = getIn(props.form.errors, props.field.name);\r\n\r\n  const { error, helperText, field, form, ...rest } = props;\r\n\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      error={error ?? Boolean(isTouched && errorMessage)}\r\n      helperText={\r\n        helperText ?? (isTouched && errorMessage ? errorMessage : undefined)\r\n      }\r\n      {...rest}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n","class LocalStorageService {\r\n  setItem(key: string, value: any): void {\r\n    localStorage.setItem(key, JSON.stringify({ value }));\r\n  }\r\n\r\n  getItem<T>(key: string): T | null;\r\n  getItem<T>(key: string, otherwise: T): T;\r\n  getItem<T>(key: string, otherwise?: T): T | null {\r\n    const data: string | null = localStorage.getItem(key);\r\n    if (data !== null) {\r\n      return JSON.parse(data).value;\r\n    }\r\n\r\n    if (otherwise) {\r\n      return otherwise;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const localStorageService = new LocalStorageService();\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  fullpage: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n  },\r\n}));\r\n\r\nconst FullPageSpinner = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.fullpage}>\r\n      <CircularProgress size={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPageSpinner;\r\n"],"sourceRoot":""}